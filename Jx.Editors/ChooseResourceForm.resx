<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListTreeView.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListTreeView.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACA
        DAAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBoAAyEBMAFZAXIBfQG/AVsBmgGwAe8DGgEkLAADEgEZAyYBOQMkATYDJAE1
        AyQBNQMkATUDJAE1AyQBNQMkATUDJAE1AyQBNQMmATkDIAEuAwoBDogAAUgBTQFPAYABXAGsAcsB/wFq
        AbwB1wH/AV0BrQHMAf8BPwJBAW8DEQEXKAABRQFIAUoBhgGKAdcB/QH/AYQBxAHdAf8BgAHBAdwB/wGA
        AcEB3AH/AYABwQHcAf8BgAHBAdwB/wGAAcEB3AH/AYABwQHcAf8BgAHBAdwB/wGAAcEB3AH/AZEB0wHt
        Af8BXgGVAbcB9AMwAUyEAAFcAX8BiwHPAWMBtgHSAf8BdAHKAeIB/wF0AckB4QH/AVoBqgHJAf8BRwGG
        AZ8B/wFBAXkBkgH/AUsBjwGpAf8BVAGeAbsB/wFUAZ4BuwH/AVgBkQGnAe8BQQFDAUUBcAMXASAQAAFH
        AUoBTQGJAeUD/wHjA/8B2gP/AdoD/wHaA/8B2gP/AdoD/wHaA/8B2gP/AdkD/wH+A/8BjAG7AdMB9wMx
        AU6EAAFiAbQB0QH/AXgB0gHnAf8BdwHPAeUB/wF2Ac0B5AH/AVoBqgHJAf8BVQGWAa8B/wFUAZABqAH/
        AV8BogG9Af8BaQG0AdIB/wFpAbQB0gH/AWkBtAHSAf8BYwGtAcwB/wFYAZEBqAHvEAABRwFKAUwBiQHD
        A/8BuAH1Av8BswHwAf4B/wGzAfAB/gH/AbMB8AH+Af8BswHwAf4B/wGzAfAB/gH/AbMB8AH+Af8BswHw
        Af4B/wGxAe8B/gH/AdID/wF8AbUBzQH3AzEBToQAAWIBtQHRAf8BegHVAekB/wF5AdMB6AH/AXgB0QHn
        Af8BWgGqAckB/wFXAZoBtQH/AVcBlwGxAf8BZQGvAc0B/wFrAboB2wH/AWsBuwHbAf8BawG8AcAB/wFr
        Ab8BawH/AVUBogG/Af8QAAFHAUoBTQGJAcAD/wGyAfEC/wGuAe0B/gH/Aa4B7QH+Af8BrgHtAf4B/wGu
        Ae0B/gH/Aa4B7QH+Af8BrgHtAf4B/wGuAe0B/gH/AawB7AH+Af8BzQP/AXwBtQHNAfcDMQFOhAABYgG2
        AdIB/wF7AdkB7AH/AXoB1wHqAf8BegHVAekB/wFaAaoByQH/AVoBpwHFAf8BWwGjAcAB/wFlAbMB0wH/
        AW0BwQHkAf8BbQHCAeUB/wGTAdEB6wX/AVYBowHBAf8QAAFHAUoBTQGJAb0D/wGoAe8C/wGmAesB/QH/
        AaYB6wH9Af8BpgHrAf0B/wGmAesB/QH/AaYB6wH9Af8BpgHrAf0B/wGmAesB/QH/AaMB6gH9Af8BxQP/
        AX0BtQHNAfcDMQFOhAABYwG3AdIB/wF9AdwB7gH/AXwB2wHtAf8BfAHaAewB/wF1AdAB5QH/AXEBygHh
        Af8BWgGqAckB/wFgAawBzAH/AWoBvgHhAf8BbwHIAe0B/wGVAdYB8gX/AVcBpQHDAf8QAAFHAUoBTQGJ
        AbkD/wGhAesC/wGgAegB/AH/AaAB6AH8Af8BoAHoAfwB/wGgAegB/AH/AaAB6AH8Af8BoAHoAfwB/wGg
        AegB/AH/AZ0B5wH8Af8BvwP/AXwBtQHNAfcDMQFOhAABYwG4AdMB/wGAAeAB8AH/AYAB3wHwAf8BgAHe
        Ae8B/wF9Ad0B7gH/AX0B3QHuAf8BWgGqAckB/wFjAbUB1wH/AWoBwQHmAf8BcQHNAfQB/wF5AdAB9QH/
        AY4BzgHoAf8BWAGnAcUB/xAAAUcBSgFNAYkBtgP/AZkB6AH9Af8BmQHlAfsB/wGZAeUB+wH/AZkB5QH7
        Af8BmQHlAfsB/wGZAeUB+wH/AZkB5QH7Af8BmQHlAfsB/wGWAeMB+wH/AbgD/wF8AbUBzQH3AzEBToQA
        AWQBuQHUAf8BggHkAfMB/wGCAeMB8gH/AYEB4gHyAf8BgQHhAfEB/wGBAeEB8QH/AVoBqgHJAf8BZwG8
        AeAB/wFtAccB7gH/AXIB0QH6Af8BcgHRAfoB/wFZAagBxwH/AyEBMBAAAUcBSgFNAYkBsgP/AZAB5AH9
        Af8BkgHiAfsB/wGSAeIB+wH/AZIB4gH7Af8BkgHiAfsB/wGSAeIB+wH/AZIB4gH7Af8BkgHiAfsB/wGO
        AeAB+wH/AbED/wF8AbQBzQH3AzEBToQAAWQBuQHUAf8BhAHnAfUB/wGDAeYB9QH/AYMB5gH0Af8BgwHl
        AfQB/wGDAeUB9AH/AVoBqgHJAf8BagHDAegB/wFuAcwB9AH/AXMB1AH9Af8BcwHUAf4B/wFaAaoByQH/
        FAABRwFKAU0BiQGvA/8BiAHgAf0B/wGLAd8B+wH/AYsB3wH7Af8BiwHfAfsB/wGLAd8B+wH/AYsB3wH7
        Af8BjAHfAfsB/wGMAd8B+wH/AYgB3QH7Af8BqwH8Av8BegG0Ac0B9wMxAU6EAAFkAboB1QH/AYUB6wH4
        Af8BhQHqAfcB/wGFAekB9wH/AYQB6QH2Af8BhAHpAfYB/wFaAaoByQH/AWwByAHwAf8BbwHNAfYB/wFz
        AdUC/wFzAdUC/wFbAawBywH/FAABRwFKAU0BiQGsA/8BgAHdAfwB/wGFAdwB+gH/AYUB3AH6Af8BhQHc
        AfoB/wGFAdwB+gH/AYcB3QH6Af8BfQHaAfkB/wF5AdoB+wH/AXcB2gH8Af8BngH6Av8BegG0Ac0B9wMx
        AU6EAAFlAbsB1QH/AYYB7gH6Af8BhgHtAfkB/wGGAe0B+QH/AYYB7AH5Af8BhgHsAfkB/wFaAaoByQH/
        AW4BzAH0Af8BcAHPAfgB/wFzAdUC/wFzAdUC/wFcAa4BzQH/FAABSAFKAU0BiQGoA/8BdQHZAfsB/wF7
        AdkB+QH/AXsB2QH5Af8BewHZAfkB/wF7AdkB+QH/AXYB1wH4Af8BiQHhAfwB/wGgAeQB+AH/AYsB0AHt
        Af8BqgHwAv8BgQG5AdUB+AMxAU+EAAFlAbwB1gH/AYgB8QH8Af8BiAHwAfsB/wGHAfAB+wH/AYcB7wH7
        Af8BhwHvAfsB/wFaAaoByQH/AXABzwH4Af8BcgHSAfwB/wFzAdUC/wFzAdUC/wFdAa8BzwH/FAABSAFK
        AU0BiQGlAf4C/wFtAdcB+wH/AXUB1wH5Af8BdQHXAfkB/wF1AdcB+QH/AXUB1wH5Af8BawHVAfoB/wGc
        AeMB9wH/AXcBvQHiAf8BVgG4AeUB/wGvAfgC/wF4AacBuQHrAysBQoQAAWUBvAHWAf8BiQHzAf0B/wGJ
        AfMB/QH/AYkB8gH9Af8BiAHyAf0B/wF7AeAB8AH/AVoBqgHJAf8BcwHVAv8BcwHVAv8BcwHVAv8BmwHn
        Av8BXgGxAdEB/xQAAUgBSwFNAYoBngH6Av8BXQHPAfkB/wFnAdAB9wH/AWcB0AH3Af8BZwHQAfcB/wFn
        AdAB9wH/AV4B0AH6Af8BhAHMAe0B/wFaAbsB5AH/AbYD/wGjAeUB+AH/AyoBQYgAAWUBvQHWAf8BigH1
        Av8BgQHnAfQB/wFuAcoB4AH/AWABswHQAf8BaAG1AdAB/wGUAdUB5AH/AcwD/wHMA/8BzAP/AcUB+gH8
        Af8BXwGzAdMB/xQAAUgBSwFNAYoBuAP/AXkB5gL/AYQB5AL/AYQB5AL/AYQB5AL/AYQB5AL/AXgB5QL/
        AZwB2wH1Af8BsAHtAfoB/wGXAdUB5QH2AycBO4wAAV4BngG1Ae8BYAG0AdAB/wFbAasBywH/AV0BrwHP
        Af8BZQG3AdYB/wF6AccB4AH/AXoBxwHgAf8BegHHAeAB/wF6AccB4AH/AXoBxwHgAf8BbQG+AdoB/wE6
        ATwBPQFgFAABPgFAAUEBbgGMAd4C/wF9AbcB0gH0AXsBsgHOAfIBewGyAc4B8gF7AbIBzgHyAXsBsgHO
        AfIBewGyAc4B8gGIAc8B7wH/AXgBqwHGAesDIAEukAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEA
        AQEFAAGAFwAD/wEAAcMB/wGAAQEEAAGBAf8BgAEBBQABBwGAAQEFAAEHAYABAQUAAQcBgAEBBQABBwGA
        AQEFAAEHAYABAQUAAQcBgAEBBQABBwGAAQEFAAEPAYABAQUAAQ8BgAEBBQABDwGAAQEFAAEPAYABAQUA
        AQ8BgAEDBQABDwGAAQcFAAEPAYABDwQACw==
</value>
  </data>
</root>